---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const {title, heroImage, updatedDate} = post.data;
const { Content } = await post.render();

---

<Layout>
  <section class={`container mx-auto`}>
    <article>
      <div class="hero-image">
        {heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
      </div>

      <div class="prose">
        <div class="title">
          <div class="date">
            <!-- <FormattedDate date={pubDate} /> -->
            {
                updatedDate && (
                    <div class="last-updated-on">
                      Last updated on <FormattedDate date={updatedDate} />
                    </div>
                )
            }
          </div>
          <h1>{title}</h1>
          <hr />
        </div>
        <Content/>
      </div>
    </article>
  </section>
</Layout>

<style>
  .hero-image {
    width: 100%;
  }

  .hero-image img {
    display: block;
    margin: 0 auto;
    border-radius: 12px;
  }


  .title {
    margin-bottom: 1em;
    padding: 1em 0;
    text-align: center;
    line-height: 1;
  }

  .title h1 {
    margin: 0 0 0.5em 0;
  }

  .date {
    margin-bottom: 0.5em;
  }

  .last-updated-on {
    font-style: italic;
  }
</style>


